% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{match_min_Haversine}
\alias{match_min_Haversine}
\title{Match coordinates to nearest coordinates}
\arguments{
\item{lat1, lat2}{Coordinates to be geocoded. Numeric vectors of equal length.}

\item{lat2, lon2}{Coordinates of known locations. Numeric vectors of equal length
(likely to be a different length than the length of \code{lat1}).}

\item{tabl}{Either \code{0L} or an integer vector the same length as \code{lat1}. If \code{0L},
then the positions in \code{lat2,lon2} are returned; if a vector, the corresponding values.}

\item{r}{A "radius" of distances outside which distances will not be considered.
Used for efficiency. The default of \code{r = 0.01} corresponds to about 15 km.}
}
\value{
For each row in \code{lat1, lon1} the position (or corresponding value in \code{tbl})
in \code{lat2, lon2} which is nearest to \code{lat1, lon1}.
}
\description{
When geocoding coordinates to known addresses, an efficient way to
match the given coordinates with the known is necessary.
}
\examples{
lat2 <- runif(5, -38, -37.8)
lon2 <- rep(145, 5)

lat1 <- c(-37.875, -37.91)
lon1 <- c(144.96, 144.978)

match_min_Haversine(lat1, lon1, lat2, lon2, 0L)


}
